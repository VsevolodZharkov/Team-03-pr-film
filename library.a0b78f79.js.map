{"mappings":"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","sources":["src/js/library/getfromlocalstorage.js","src/js/library/createlistcards.js","src/js/library/lab-pag.js","src/js/library/lab-modal.js","src/js/library/openWatched.js","src/js/library/openQueue.js","src/js/library.js"],"sourcesContent":["function getMovieFromLocalStorage(key) {\n  //отримуємо фільм зі сховища\n  const storageValue = localStorage.getItem(key);\n  const dataMovie = JSON.parse(storageValue);\n  return dataMovie;\n}\n\nexport { getMovieFromLocalStorage };\n","/**\n * render markup with films\n * @param {array} films\n */\nfunction createMarkUpListFilm(page, films) {\n  let perPage = 20;\n\n  let startEl = (page - 1) * perPage;\n\n  let endEl = startEl + 20;\n\n  const gallery = document.querySelector('.gallery');\n  const genresArr = JSON.parse(localStorage.getItem('genres'));\n  let markup = '';\n  for (let i = startEl; i < endEl; i++) {\n    if (i < films.length) {\n      markup += `<li class=\"gallery__item\" data-id=\"${films[i].id}\">\n                <article>\n                    <img class=\"article__image\" src=\"${\n                      !films[i].poster_path\n                        ? 'https://img.freepik.com/free-vector/error-404-concept-for-landing-page_52683-20173.jpg?w=2000'\n                        : 'https://image.tmdb.org/t/p/w500' +\n                          films[i].poster_path\n                    }\" alt=\"${\n        films[i].title ? films[i].title : films[i].original_title\n      }\" width=\"280\" loading=\"lazy\">\n                    <h1 class=\"article__description\">${\n                      films[i].title ? films[i].title : films[i].original_title\n                    }</h1>\n                    <p class=\"article__description-orange\">\n                        <span class=\"pseudo-element\">\n                            ${\n                              getGeneres(films[i].genre_ids, genresArr)\n                                .length >= 3\n                                ? getGeneres(films[i].genre_ids, genresArr)\n                                    .slice(0, 2)\n                                    .join(', ') + ', Others...'\n                                : getGeneres(\n                                    films[i].genre_ids,\n                                    genresArr\n                                  ).join(', ')\n                                ? getGeneres(\n                                    films[i].genre_ids,\n                                    genresArr\n                                  ).join(', ')\n                                : 'NO DATA'\n                            }\n                        </span>\n                        <span>\n                            ${\n                              films[i].release_date\n                                ? films[i].release_date.slice(0, 4)\n                                : 'OUR ERA'\n                            }\n                        </span>\n                    </p>\n                </article>\n            </li>`;\n    }\n  }\n\n  gallery.innerHTML = markup;\n}\n\n/**\n * return  string with genres\n * @param {Arr} arr  of genres_ids\n * @param {obj} genres\n * @returns  array\n */\nfunction getGeneres(arr, genres) {\n  return arr.map(item => {\n    return genres.genres\n      .filter(elem => {\n        // console.log(elem.id === item);\n        return elem.id === item;\n      })\n      .flatMap(one => one.name);\n  });\n}\nexport { createMarkUpListFilm, getGeneres };\n","import { getMovieFromLocalStorage } from './getfromlocalstorage';\nimport { createMarkUpListFilm } from './createlistcards';\n// //----------------------------------------------------------------//\nconst refsPag = {\n  pagContainer: document.querySelector('.js-pagination'),\n};\n\nlet currentPage;\n\nfunction renderBtnPag(page, totalPages) {\n  if (!page || !totalPages || totalPages === 1) {\n    return;\n  }\n  let markup = '';\n\n  const beforeOnePage = page - 1;\n  const beforeTwoPage = page - 2;\n  const afterOnePage = Number(page) + 1;\n  const afterTwoPage = Number(page) + 2;\n  currentPage = page;\n\n  if (page > 1) {\n    markup += `<li class=\"pagination__item\"><button class=\"previos\">\n        &larr;</button>\n      </li>`;\n  }\n  if (page > 3) {\n    markup += `<li class=\"pagination__item\"><button class=\"pagination__btn\">1</button></li>`;\n  }\n  if (page > 4) {\n    markup += `<li class=\"pagination__item\"><button class=\"pagination__dottes\">...</button></li>`;\n  }\n  if (page > 2) {\n    markup += `<li class=\"pagination__item\"><button class=\"pagination__btn\">${beforeTwoPage}</button></li>`;\n  }\n  if (page > 1) {\n    markup += `<li class=\"pagination__item\"><button class=\"pagination__btn\">${beforeOnePage}</button></li>`;\n  }\n  markup += `<li class=\"pagination__item\"><button class=\"pagination__btn active__btn\">${page}</button></li>`;\n\n  if (afterOnePage <= totalPages) {\n    markup += `<li class=\"pagination__item\"><button class=\"pagination__btn\">${afterOnePage}</button></li>`;\n  }\n  if (afterTwoPage <= totalPages) {\n    markup += `<li class=\"pagination__item\"><button class=\"pagination__btn\">${afterTwoPage}</button></li>`;\n  }\n\n  if (totalPages > page + 3) {\n    markup += `<li class=\"pagination__item\"><button class=\"pagination__dottes\">...</button></li>`;\n  }\n  if (totalPages > page + 2) {\n    markup += `<li class=\"pagination__item\"><button class=\"pagination__btn\">${totalPages}</button></li>`;\n  }\n  if (totalPages > page) {\n    markup += `<li class=\"pagination__item\"><button class=\"next\">&rarr;</button></li>`;\n  }\n  refsPag.pagContainer.innerHTML = markup;\n}\n\n/////////////////////////////////////////////////////////////////\n// const key = \nfunction handlerPagination(totalPages, key) {\n  refsPag.pagContainer.addEventListener('click', onClickPagBtn);\n\n  function onClickPagBtn(event) {\n    if (\n      event.target.nodeName !== 'BUTTON' ||\n      event.target.textContent === '...'\n    ) {\n      return;\n    }\n\n    if (event.target.classList.contains('previos')) {\n      currentPage = Number(currentPage) - 1;\n    } else if (event.target.classList.contains('next')) {\n      currentPage = Number(currentPage) + 1;\n    } else {\n      currentPage = Number(event.target.textContent);\n    }\n    const films = getMovieFromLocalStorage(key);\n    renderBtnPag(currentPage, totalPages);\n    createMarkUpListFilm(currentPage, films);\n  }\n}\n\nexport { renderBtnPag, handlerPagination };\n","import { getGeneres } from './createlistcards';\n\nconst refs = {\n  openGallery: document.querySelector('.gallery'),\n  closeBtn: document.querySelector('[data-modal-close]'),\n  backdrop: document.querySelector('[data-modal]'),\n  modal: document.querySelector('.modal__form'),\n  article: document.querySelector('.modal__form-card'),\n};\n\nlet film;\nlet markUp = '';\nlet idFilm;\n\nfunction showLabModal(data) {\n  console.log(data);\n  film = data;\n  refs.openGallery.addEventListener('click', onClickCard);\n}\n\nfunction onClickCard(event) {\n  if (event.target.nodeName === event.currentTarget.nodeName) {\n    return;\n  }\n  idFilm = event.target.closest('li').dataset.id;\n  console.log(idFilm);\n  createModalMarkup(film, idFilm);\n  refs.backdrop.classList.add('is-open');\n  document.addEventListener('click', onClickBackdrop);\n  document.addEventListener('keydown', onEscClick);\n}\n\nfunction createModalMarkup(arr, id) {\n  const filteredFilm = arr.filter(el => {\n    return el.id === Number(id);\n  });\n\n  const genresArr = JSON.parse(localStorage.getItem('genres'));\n  const {\n    title,\n    poster_path,\n    overview,\n    vote_average,\n    vote_count,\n    popularity,\n    original_title,\n  } = filteredFilm[0];\n\n  markUp = `\n      <img\n        class=\"modal__form-img\"\n        src=\"https://image.tmdb.org/t/p/w500${poster_path}\"\n        alt=\"\"\n      />\n      <div class=\"modal__descript\">\n        <h2 class=\"modal__title\">${title}</h2>\n\n        <table class=\"modal__descript-table\">\n          <tbody>\n            <tr>\n              <td class=\"modal__text-properties\">Vote / Votes</td>\n              <td class=\"modal__text-params\">\n                <span class=\"modal__text-params-vote\">${vote_average}</span> /\n                <span class=\"modal__text-params-votes\">${vote_count}</span>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"modal__text-properties\">Popularity</td>\n              <td class=\"modal__text-params\">${popularity}</td>\n            </tr>\n            <tr>\n              <td class=\"modal__text-properties\">Original Title</td>\n              <td class=\"modal__text-params\">${original_title}</td>\n            </tr>\n            <tr>\n              <td class=\"modal__text-properties\">Genre</td>\n              <td class=\"modal__text-params modal__text-low\">${getGeneres(\n                filteredFilm[0].genre_ids,\n                genresArr\n              ).join(', ')}</td>\n            </tr>\n          </tbody>\n        </table>\n        <h3 class=\"modal__descript-titel\">About</h3>\n        <p class=\"modal__descript-text\">\n          ${overview}\n        </p>\n        <ul class=\"modal__button__list\">\n          <li>\n            <button class=\"modal__button__item-watched\" type=\"button\">remove from Watched</button>\n          </li>\n          <li><button class=\"modal__button__item-queue\" type=\"button\">remove from queue</button></li>\n        </ul>\n      </div>\n  `;\n  refs.article.innerHTML = markUp;\n  const btnWatched = document.querySelector('.modal__button__item-watched');\n  const btnQueue = document.querySelector('.modal__button__item-queue');\n\n  ///!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  // btnWatched.addEventListener('click', setToLocalStoregWatched);\n  // btnQueue.addEventListener('click', setToLocalStoregQue);\n}\n\nconst closeBtn = document.querySelector('.modal__btn');\n\ncloseBtn.addEventListener('click', onClickCloseBtn);\n\nfunction onClickCloseBtn(event) {\n  event.preventDefault();\n  refs.backdrop.classList.remove('is-open');\n  removeListener();\n}\n\nfunction onClickBackdrop(event) {\n  if (event.target === refs.backdrop) {\n    refs.backdrop.classList.remove('is-open');\n    removeListener();\n  }\n}\n\nfunction onEscClick(event) {\n  if (event.code === 'Escape') {\n    refs.backdrop.classList.remove('is-open');\n    removeListener();\n  }\n}\n\nfunction removeListener() {\n  document.removeEventListener('keydown', onEscClick);\n  document.removeEventListener('click', onClickBackdrop);\n}\n\n// function setToLocalStoregWatched(e) {\n//   console.log(e);\n//   const selectFilm = film.find(item => {\n//     return item.id === Number(idFilm);\n//   });\n//   setItemToLocalStorage('watched', selectFilm);\n//   e.target.textContent = 'Dоne!';\n//   // e.target.setAttribute('disabled', 'disabled');\n// }\n// function setToLocalStoregQue(e) {\n//   console.log(e);\n//   const selectFilm = film.find(item => {\n//     return item.id === Number(idFilm);\n//   });\n//   setItemToLocalStorage('queue', selectFilm);\n//   e.target.textContent = 'Dоne!';\n//   // e.target.setAttribute('disabled', 'disabled');\n// }\n\n// function setItemToLocalStorage(key, objFilm) {\n//   if (!localStorage.getItem(key)) {\n//     const array = [];\n//     array.push(objFilm);\n//     localStorage.setItem(key, JSON.stringify(array));\n//   } else {\n//     const storageValue = localStorage.getItem(key);\n//     const dataMovie = JSON.parse(storageValue);\n\n//     const isInLocalStoreg = dataMovie.find(item => item.id === objFilm.id);\n//     console.log(isInLocalStoreg);\n//     if (!isInLocalStoreg) {\n//       dataMovie.push(objFilm);\n//       localStorage.setItem(key, JSON.stringify(dataMovie));\n//     }\n//   }\n// }\n\nexport { showLabModal };\n","import { getMovieFromLocalStorage } from './getfromlocalstorage';\nimport { createMarkUpListFilm } from './createlistcards';\nimport { renderBtnPag, handlerPagination } from './lab-pag';\nimport { showLabModal } from './lab-modal';\n\nconst watched = document.querySelector('.js-watched');\nconst queue = document.querySelector('.js-queue');\n\nfunction openWatched () {\n\twatched.classList.add('is-active');\n\tqueue.classList.remove('is-active');\n\tconst films = getMovieFromLocalStorage('watched');\n\tlet perPage = 20;\n\tlet totalPages = Math.ceil(films.length / perPage);\n\n//рендер карточек\n\tcreateMarkUpListFilm(1, films);\n\n//рендер пагинации\n\trenderBtnPag(1, totalPages);\n\thandlerPagination(totalPages, 'watched');\n\tshowLabModal(films);\n}\n\n\nexport { openWatched };","import { getMovieFromLocalStorage } from './getfromlocalstorage';\nimport { createMarkUpListFilm } from './createlistcards';\nimport { renderBtnPag, handlerPagination } from './lab-pag';\nimport { showLabModal } from './lab-modal';\nconst watched = document.querySelector('.js-watched');\nconst queue = document.querySelector('.js-queue');\n\nfunction openQueue () {\n\twatched.classList.remove('is-active');\n\tqueue.classList.add('is-active');\n\tconst films = getMovieFromLocalStorage('queue');\n\tlet perPage = 20;\n\tlet totalPages = Math.ceil(films.length / perPage);\n\n//рендер карточек\n\tcreateMarkUpListFilm(1, films);\n\n//рендер пагинации\n\trenderBtnPag(1, totalPages);\n\thandlerPagination(totalPages, 'queue');\n\tshowLabModal(films);\n}\n\n\n\n\nexport { openQueue };","import { getMovieFromLocalStorage } from './library/getfromlocalstorage';\nimport { createMarkUpListFilm } from './library/createlistcards';\nimport { renderBtnPag, handlerPagination } from './library/lab-pag';\nimport { showLabModal } from './library/lab-modal';\nimport { openWatched } from './library/openWatched';\nimport { openQueue } from './library/openQueue';\n\n// //----------------------------------------------------------------//\nconst refs = {\n  btnWatched: document.querySelector('.js-watched'),\n  btnQueue: document.querySelector('.js-queue'),\n  gallery: document.querySelector('.gallery'),\n  pagination: document.querySelector('.js-pagination'),\n};\n// let KEY_QUEUE = 'queue';\n// let KEY_WATCHED = 'watched';\n\nrefs.btnQueue.classList.add('is-active');\n//активная кнопка\nrefs.btnWatched.addEventListener('click', openWatched)\nrefs.btnQueue.addEventListener('click', openQueue)\n\n// фильми из локалстораге\nconst films = getMovieFromLocalStorage('queue');\n\tlet perPage = 20;\n\tlet totalPages = Math.ceil(films.length / perPage);\n// рендер карточек\ncreateMarkUpListFilm(1, films);\n\n// рендер пагинации\nrenderBtnPag(1, totalPages);\nhandlerPagination(totalPages, 'queue');\nshowLabModal(films);\n\n\n\n"],"names":["$07d9c4ac5a8089e9$export$b4d9d7f244cc0a05","key","storageValue","localStorage","getItem","JSON","parse","$d2d5d29229dbdd97$export$4a89087502c5be7d","page","films","startEl","endEl","gallery","document","querySelector","genresArr","markup","i","length","id","poster_path","title","original_title","$d2d5d29229dbdd97$export$50e233691ff9d4c9","genre_ids","slice","join","release_date","innerHTML","arr","genres","map","item","filter","elem","flatMap","one","name","$ee6e5ef08e09b34f$var$refsPag","pagContainer","$ee6e5ef08e09b34f$var$currentPage","$ee6e5ef08e09b34f$export$f815f55db4d265b7","totalPages","beforeOnePage","beforeTwoPage","afterOnePage","Number","afterTwoPage","$ee6e5ef08e09b34f$export$ebec724813b6a24b","addEventListener","event","target","nodeName","textContent","classList","contains","$2851240f6bc58fce$var$refs","openGallery","closeBtn","backdrop","modal","article","$2851240f6bc58fce$var$film","$2851240f6bc58fce$var$idFilm","$2851240f6bc58fce$var$markUp","$2851240f6bc58fce$export$2d78b08ad22bd050","data","console","log","$2851240f6bc58fce$var$onClickCard","currentTarget","closest","dataset","filteredFilm","el","overview","vote_average","vote_count","popularity","$2851240f6bc58fce$var$createModalMarkup","add","$2851240f6bc58fce$var$onClickBackdrop","$2851240f6bc58fce$var$onEscClick","remove","$2851240f6bc58fce$var$removeListener","code","removeEventListener","preventDefault","$d2d4ef6de7ff0124$var$watched","$d2d4ef6de7ff0124$var$queue","$b1b753f290a0b7ff$var$watched","$b1b753f290a0b7ff$var$queue","$1cafa503bc57b7a0$var$refs","btnWatched","btnQueue","pagination","Math","ceil","$1cafa503bc57b7a0$var$films","$1cafa503bc57b7a0$var$totalPages"],"version":3,"file":"library.a0b78f79.js.map"}