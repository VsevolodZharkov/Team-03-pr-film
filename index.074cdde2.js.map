{"mappings":"AAIA,SAASA,EAAaC,GAEpB,MAAMC,EAAUC,SAASC,cAAc,YACjCC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,WAC5CC,EAAST,EACZU,KAAIC,GACI,8IAGSA,EAAKC,qBAEnBD,EAAKE,eAAiBF,EAAKE,eAAiBF,EAAKG,4FAGnCH,EAAKE,eAAiBF,EAAKE,eAAiBF,EAAKG,+JAwBvE,SAAqBC,EAAKC,GAIxB,MAAMC,EAAMF,EAAIL,KAAIC,GACXK,EAAOA,OACXE,QAAOC,GAECA,EAAKC,KAAOT,IAEpBU,SAAQC,GAAOA,EAAIC,SAExB,MAAO,GACLN,EAAIO,QAAU,EAAIP,EAAIQ,MAAM,EAAG,GAAGC,KAAK,MAAQ,WAAaT,EAAIS,KAAK,QAjC3CC,CAAYhB,EAAKiB,UAAWxB,oGAG5BO,EAAKkB,aAAaJ,MAAM,EAAG,iHAMpDC,KAAK,IAERzB,EAAQ6B,UAAYrB,ECxBtBsB,eAAeC,EAAeC,GAC5B,MAAMC,EAAS,IAAIC,gBAAgB,CACjCC,QAVY,mCAWZH,KAAMA,IAER,aAAaI,MAAM,mDAAeH,KAAUI,MAAKC,GAAKA,EAAEC,SCI1D,SAASC,EAAoBP,IAX7BH,iBACE,MAAMG,EAAS,IAAIC,gBAAgB,CACjCC,QATY,qCAWd,aAAaC,MAAM,iDAAeH,KAAUI,MAAKC,GAAKA,EAAEC,UAQxDE,GAAYJ,MAAKK,IACfpC,aAAaqC,QAAQ,SAAUvC,KAAKwC,UAAUF,QCflDZ,uBACQU,IAGNT,EAFgB,GAGbM,MAAKK,IACJ5C,EAAa4C,EAAKG,YAEnBC,OAAMC,GAAMC,QAAQC,IAAIF,KACxBG,SAAQ,IAAMF,QAAQC,IAAI,gBCT/B,GCKAnB,eAA4BqB,EAAOnB,GACjC,MAAMC,EAAS,IAAIC,gBAAgB,CACjCC,QAXY,mC,KAYZH,E,MACAmB,IAEF,aAAaf,MAAM,6CAAeH,KAAUI,MAAKC,GAAKA,EAAEC,SDT1D,CAAa,SAAU,GAAGF,MAAKK,GAAQM,QAAQC,IAAIP,EAAKG","sources":["src/js/markup/createmarkup.js","src/js/apisreq/gettrends.js","src/js/apisreq/getgenres.js","src/js/apisreq/genresandtrends.js","src/js/index.js","src/js/apisreq/getserchquery.js"],"sourcesContent":["/**\n * render markup with films\n * @param {array} films\n */\nfunction createMarkUp(films) {\n  // console.log(films);\n  const gallery = document.querySelector('.gallery');\n  const genresArr = JSON.parse(localStorage.getItem('genres'));\n  const markup = films\n    .map(item => {\n      return `<li class=\"gallery__item\">\n                <article>\n                    <img class=\"article__image\" src=\"https://image.tmdb.org/t/p/w500${\n                      item.poster_path\n                    }\" alt=\"${\n        item.original_title ? item.original_title : item.title\n      }\" width=\"280\" loading=\"lazy\">\n                    <h1 class=\"article__description\">${\n                      item.original_title ? item.original_title : item.title\n                    }</h1>\n                    <p class=\"article__description-orange\">\n                        <span class=\"pseudo-element\">\n                            ${returnFilms(item.genre_ids, genresArr)}\n                        </span>\n                        <span>\n                            ${item.release_date.slice(0, 4)}\n                        </span>\n                    </p>\n                </article>\n            </li>`;\n    })\n    .join('');\n\n  gallery.innerHTML = markup;\n}\n\n/**\n * return  string with genres\n * @param {Arr} arr  of genres_ids\n * @param {obj} genres\n * @returns  string\n */\nfunction returnFilms(arr, genres) {\n  // console.log('arr', arr);\n  // console.log('genres', genres);\n\n  const res = arr.map(item => {\n    return genres.genres\n      .filter(elem => {\n        // console.log(elem.id === item);\n        return elem.id === item;\n      })\n      .flatMap(one => one.name);\n  });\n  return `${\n    res.length >= 3 ? res.slice(0, 2).join(', ') + ', Others' : res.join(', ')\n  }`;\n}\nexport { createMarkUp };\n","// //----------------------------------------------//\nconst KEY_API = '7a4cd4317772102a9b88ef6a54b71590';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n\n/**\n * Function get data from API with trend movies/day\n * @param {Number} page of pagination\n * @returns promisse with object\n */\nasync function getTrendMovies(page) {\n  const params = new URLSearchParams({\n    api_key: KEY_API,\n    page: page,\n  });\n  return await fetch(`${BASE_URL}?${params}`).then(r => r.json());\n}\n\nexport { getTrendMovies };\n","const KEY_API = '7a4cd4317772102a9b88ef6a54b71590';\nconst BASE_URL = 'https://api.themoviedb.org/3/genre/movie/list';\n\n/**\n * get data with genres from APi and set it into the Local storage\n * @returns array with genres\n */\nasync function getGenres() {\n  const params = new URLSearchParams({\n    api_key: KEY_API,\n  });\n  return await fetch(`${BASE_URL}?${params}`).then(r => r.json());\n}\n\n/**\n *\n * @param {*} params\n */\nfunction setupGenesToStorage(params) {\n  getGenres().then(data => {\n    localStorage.setItem('genres', JSON.stringify(data));\n  });\n}\n\nexport { setupGenesToStorage };\n","import { getTrendMovies } from './gettrends';\nimport { setupGenesToStorage } from './getgenres';\nimport { createMarkUp } from '../markup/createmarkup';\n//-----------------------------------------------------------//\n\nasync function getGenresPopfilms() {\n  await setupGenesToStorage();\n  let trendPage = 1;\n\n  getTrendMovies(trendPage)\n    .then(data => {\n      createMarkUp(data.results);\n    })\n    .catch(er => console.log(er))\n    .finally(() => console.log('Some logic'));\n}\n\nexport { getGenresPopfilms };\n","import { createMarkUp } from './markup/createmarkup';\nimport { searchMovies } from './apisreq/getserchquery';\nimport { getGenresPopfilms } from './apisreq/genresandtrends';\n//----------------------------------------------------------------//\n\ngetGenresPopfilms();\n\nsearchMovies('batman', 1).then(data => console.log(data.results));\n","// //----------------------------------------------//\nconst KEY_API = '7a4cd4317772102a9b88ef6a54b71590';\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n\n/**\n * Get data from API with query snd page pagination\n * @param {String} query\n * @param {Number} page\n * @returns  object with data\n */\nasync function searchMovies(query, page) {\n  const params = new URLSearchParams({\n    api_key: KEY_API,\n    page,\n    query,\n  });\n  return await fetch(`${BASE_URL}?${params}`).then(r => r.json());\n}\n\nexport { searchMovies };\n"],"names":["$9d24f742dd1ac2db$export$ae228e3d7ccd1f7","films","gallery","document","querySelector","genresArr","JSON","parse","localStorage","getItem","markup","map","item","poster_path","original_title","title","arr","genres","res","filter","elem","id","flatMap","one","name","length","slice","join","$9d24f742dd1ac2db$var$returnFilms","genre_ids","release_date","innerHTML","async","$048ccacdcf1bc0ab$export$21088d0ca17de469","page","params","URLSearchParams","api_key","fetch","then","r","json","$77d7942edb66bd06$export$48228040be21069b","$77d7942edb66bd06$var$getGenres","data","setItem","stringify","results","catch","er","console","log","finally","query"],"version":3,"file":"index.074cdde2.js.map"}